{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datePicker = document.querySelector('#datetime-picker');\nconst btnStart = document.querySelector('button[data-start]');\n\ndatePicker.setAttribute('placeholder', 'Choose a date');\n\nbtnStart.setAttribute('disabled', 'disabled');\n\nconst createBtn = document.createElement('button');\nconst resetBtn = btnStart.insertAdjacentElement('afterend', createBtn);\n\nresetBtn.textContent = 'Reset';\nresetBtn.setAttribute('type', 'button');\nresetBtn.setAttribute('data-reset', '');\nresetBtn.classList.add('is-hidden');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: null,\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const currentTime = Date.now();\n\n    if (selectedDates[0].getTime() < currentTime) {\n      iziToast.warning({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n      });\n      btnStart.disabled = true;\n    } else {\n      btnStart.removeAttribute('disabled');\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nconst reversTimerComponents = {\n  getDays: document.querySelector('span[data-days]'),\n  getHours: document.querySelector('span[data-hours]'),\n  getMinutes: document.querySelector('span[data-minutes]'),\n  getSeconds: document.querySelector('span[data-seconds]'),\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nbtnStart.addEventListener('click', onClickStartReversTimer);\n\nlet intervalId = null;\n\nfunction onClickStartReversTimer() {\n  intervalId = setInterval(updateCounter, 1000);\n\n  function updateCounter() {\n    let inputDate = new Date(datePicker.value);\n    const currentDate = Date.now();\n    const deltaTime = inputDate.getTime() - currentDate;\n    const deltaTimeObj = convertMs(deltaTime);\n\n    if (isNaN(inputDate)) {\n      Report.warning('Oops!', 'Please choose future date!', 'Try Again');\n      clearInterval(intervalId);\n\n      return;\n    }\n\n    if (deltaTime < 0) {\n      clearInterval(intervalId);\n      resetBtn.classList.add('is-hidden');\n      btnStart.classList.remove('is-hidden');\n      datePicker.value = '';\n      return;\n    }\n\n    reversTimerComponents.getDays.textContent = addLeadingZero(\n      deltaTimeObj.days\n    );\n    reversTimerComponents.getHours.textContent = addLeadingZero(\n      deltaTimeObj.hours\n    );\n    reversTimerComponents.getMinutes.textContent = addLeadingZero(\n      deltaTimeObj.minutes\n    );\n    reversTimerComponents.getSeconds.textContent = addLeadingZero(\n      deltaTimeObj.seconds\n    );\n\n    btnStart.classList.add('is-hidden');\n    resetBtn.classList.remove('is-hidden');\n  }\n}\n\nresetBtn.addEventListener('click', onClickClearInterval);\n\nfunction onClickClearInterval() {\n  //\n  clearInterval(intervalId);\n\n  reversTimerComponents.getDays.textContent = '00';\n  reversTimerComponents.getHours.textContent = '00';\n  reversTimerComponents.getMinutes.textContent = '00';\n  reversTimerComponents.getSeconds.textContent = '00';\n\n  datePicker.value = '';\n\n  resetBtn.classList.add('is-hidden');\n  btnStart.classList.remove('is-hidden');\n}\n"],"names":["datePicker","btnStart","createBtn","resetBtn","options","selectedDates","currentTime","iziToast","flatpickr","reversTimerComponents","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","onClickStartReversTimer","intervalId","updateCounter","inputDate","currentDate","deltaTime","deltaTimeObj","onClickClearInterval"],"mappings":"0IAKA,MAAMA,EAAa,SAAS,cAAc,kBAAkB,EACtDC,EAAW,SAAS,cAAc,oBAAoB,EAE5DD,EAAW,aAAa,cAAe,eAAe,EAEtDC,EAAS,aAAa,WAAY,UAAU,EAE5C,MAAMC,EAAY,SAAS,cAAc,QAAQ,EAC3CC,EAAWF,EAAS,sBAAsB,WAAYC,CAAS,EAErEC,EAAS,YAAc,QACvBA,EAAS,aAAa,OAAQ,QAAQ,EACtCA,EAAS,aAAa,aAAc,EAAE,EACtCA,EAAS,UAAU,IAAI,WAAW,EAElC,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,KACb,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAc,KAAK,MAErBD,EAAc,CAAC,EAAE,QAAO,EAAKC,GAC/BC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oCACjB,CAAO,EACDN,EAAS,SAAW,IAEpBA,EAAS,gBAAgB,UAAU,CAEtC,CACH,EAEAO,EAAU,mBAAoBJ,CAAO,EAErC,MAAMK,EAAwB,CAC5B,QAAS,SAAS,cAAc,iBAAiB,EACjD,SAAU,SAAS,cAAc,kBAAkB,EACnD,WAAY,SAAS,cAAc,oBAAoB,EACvD,WAAY,SAAS,cAAc,oBAAoB,CACzD,EAEA,SAASC,EAAUC,EAAI,CAKrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAhB,EAAS,iBAAiB,QAASiB,CAAuB,EAE1D,IAAIC,EAAa,KAEjB,SAASD,GAA0B,CACjCC,EAAa,YAAYC,EAAe,GAAI,EAE5C,SAASA,GAAgB,CACvB,IAAIC,EAAY,IAAI,KAAKrB,EAAW,KAAK,EACzC,MAAMsB,EAAc,KAAK,MACnBC,EAAYF,EAAU,QAAO,EAAKC,EAClCE,EAAed,EAAUa,CAAS,EAExC,GAAI,MAAMF,CAAS,EAAG,CACpB,OAAO,QAAQ,QAAS,6BAA8B,WAAW,EACjE,cAAcF,CAAU,EAExB,MACD,CAED,GAAII,EAAY,EAAG,CACjB,cAAcJ,CAAU,EACxBhB,EAAS,UAAU,IAAI,WAAW,EAClCF,EAAS,UAAU,OAAO,WAAW,EACrCD,EAAW,MAAQ,GACnB,MACD,CAEDS,EAAsB,QAAQ,YAAcO,EAC1CQ,EAAa,IACnB,EACIf,EAAsB,SAAS,YAAcO,EAC3CQ,EAAa,KACnB,EACIf,EAAsB,WAAW,YAAcO,EAC7CQ,EAAa,OACnB,EACIf,EAAsB,WAAW,YAAcO,EAC7CQ,EAAa,OACnB,EAEIvB,EAAS,UAAU,IAAI,WAAW,EAClCE,EAAS,UAAU,OAAO,WAAW,CACtC,CACH,CAEAA,EAAS,iBAAiB,QAASsB,CAAoB,EAEvD,SAASA,GAAuB,CAE9B,cAAcN,CAAU,EAExBV,EAAsB,QAAQ,YAAc,KAC5CA,EAAsB,SAAS,YAAc,KAC7CA,EAAsB,WAAW,YAAc,KAC/CA,EAAsB,WAAW,YAAc,KAE/CT,EAAW,MAAQ,GAEnBG,EAAS,UAAU,IAAI,WAAW,EAClCF,EAAS,UAAU,OAAO,WAAW,CACvC"}